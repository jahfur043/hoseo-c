#include <stdio.h>
#include <stdlib.h>

#define PRODUCT_COUNT 5  // 상품 개수

int main() {
    int stock[PRODUCT_COUNT] = {0};      // 각 상품의 재고
    int sales[PRODUCT_COUNT] = {0};      // 각 상품의 판매 수량
    int choice, id, qty;
    
    while (1) {
        printf("[쇼핑몰 관리 프로그램]\n");
        printf(">> 원하는 메뉴를 선택하세요.(1. 입고, 2.판매, 3.상품현황, 4.종료)\n");
        scanf("%d", &choice);

        switch (choice) {
            case 1: { // 입고
                int subChoice;
                printf("입고수량 입력 : 전체 상품 입고수량 입력 1, 개별 상품 입력 2를 선택\n");
                scanf("%d", &subChoice);

                if (subChoice == 1) {  
                    // 전체 상품 일괄 입고
                    printf("전체 상품의 입고수량을 입력하세요 (%d개): ", PRODUCT_COUNT);
                    for (int i = 0; i < PRODUCT_COUNT; i++) {
                        scanf("%d", &qty);
                        if (qty < 0) qty = 0; // 음수 방지
                        stock[i] += qty;
                    }
                    printf("전체 상품 입고 완료!\n");
                } 
                else if (subChoice == 2) {  
                    // 개별 상품 입고
                    printf("상품 ID 입력 (1~%d): ", PRODUCT_COUNT);
                    scanf("%d", &id);
                    if (id < 1 || id > PRODUCT_COUNT) {
                        printf("잘못된 상품 ID입니다.\n");
                        break;
                    }
                    printf("입고 수량 입력: ");
                    scanf("%d", &qty);
                    if (qty < 0) qty = 0;
                    stock[id-1] += qty;
                    printf("상품 %d 입고 완료. 현재 재고: %d\n", id, stock[id-1]);
                } 
                else {
                    printf("잘못된 선택입니다.\n");
                }
                break;
            }

            case 2:{// 판매
                int subChoice;
                printf("판매수량 입력 : 전체 상품 판매수량 입력 1, 개별 상품 입력 2를 선택\n");
                scanf("%d", &subChoice);

                if (subChoice == 1) {
                    // 전체 상품 일괄 판매
                    printf("전체 상품의 판매수량을 입력하세요 (%d개): ", PRODUCT_COUNT);
                    for (int i = 0; i < PRODUCT_COUNT; i++) {
                        scanf("%d", &qty);
                        if (qty < 0) qty = 0;
                        if (stock[i] < qty) {
                            printf("상품 %d 재고 부족! (현재 재고: %d)\n", i+1, stock[i]);
                        } else {
                            stock[i] -= qty;
                            sales[i] += qty;
                        }
                    }
                    printf("전체 상품 판매 처리 완료!\n");
                }
                else if (subChoice == 2) {
                    // 개별 상품 판매
                    printf("상품 ID 입력 (1~%d): ", PRODUCT_COUNT);
                    scanf("%d", &id);
                    if (id < 1 || id > PRODUCT_COUNT) {
                        printf("잘못된 상품 ID입니다.\n");
                        break;
                    }
                    printf("판매 수량 입력: ");
                    scanf("%d", &qty);
                    if (qty < 0) qty = 0;
                    if (stock[id-1] < qty) {
                        printf("재고 부족! 현재 재고: %d\n", stock[id-1]);
                        break;
                    }
                    stock[id-1] -= qty;
                    sales[id-1] += qty;
                    printf("상품 %d 판매 완료. 남은 재고: %d\n", id, stock[id-1]);
                }
                else {
                    printf("잘못된 선택입니다.\n");
                }
                break;
            }

            case 3: { // 상품현황
                int totalStock = 0, totalSales = 0;
                int maxSale = sales[0], maxSaleId = 1;
                int minSale = sales[0], minSaleId = 1;
                const int STOCK_LIMIT = 2;

                printf("\n[상품 현황]\n");

                // 1) 재고수량 출력
                printf("재고수량 : ");
                for (int i = 0; i < PRODUCT_COUNT; i++) {
                    printf("%d ", stock[i]);
                    totalStock += stock[i];
                    totalSales += sales[i];

                    if (sales[i] > maxSale) {
                        maxSale = sales[i];
                        maxSaleId = i+1;
                    }
                    if (sales[i] < minSale) {
                        minSale = sales[i];
                        minSaleId = i+1;
                    }
                }
                printf("\n");

                // 2) 총 판매량과 판매율
                int totalItems = totalStock + totalSales;
                double saleRate = (totalItems > 0) ? (100.0 * totalSales / totalItems) : 0.0;
                printf("총 판매량 : %d (판매율 %.2f%%)\n", totalSales, saleRate);

                // 3) 최다 / 최소 판매 상품
                if (totalSales > 0) {
                    printf("가장 많이 판매된 상품 : ID %d , 판매량 %d\n", maxSaleId, maxSale);
                    printf("가장 적게 판매된 상품 : ID %d , 판매량 %d\n", minSaleId, minSale);
                }

                // 4) 재고부족 상품 확인
                for (int i = 0; i < PRODUCT_COUNT; i++) {
                    if (stock[i] <= STOCK_LIMIT) {
                        printf("상품 ID %d : 재고부족(%d)\n", i+1, stock[i]);
                    }
                }
                break;
            }

            case 4: // 종료
                printf("프로그램을 종료합니다.\n");
                exit(0);

            default:
                printf("잘못된 메뉴 선택입니다.\n");
        }
    }
    return 0;
}

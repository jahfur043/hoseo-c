#include <stdio.h>
#include <string.h>

#define MAX 5

typedef struct {
    int id;             
    char name[50];      
    int price;         
    int stock;         
    int sales;          
    int totalSales;    
} Product;

int findProduct(Product p[], int count, int id) {
    for (int i = 0; i < count; i++) {
        if (p[i].id == id) return i;
    }
    return -1;
}

int main() {
    Product products[MAX];
    int count = 0;
    int menu;

    while (1) {
        printf("\n원하는 메뉴를 선택하세요.\n");
        printf("1. 입고\n2. 판매\n3. 개별현황\n4. 전체현황\n5. 종료\n>> ");
        scanf("%d", &menu);

        if (menu == 1) { // 입고
            if (count >= MAX) {
                printf("상품 개수 초과!\n");
                continue;
            }

            int id, quantity, price;
            char name[50];

            printf("상품 ID 입력: ");
            scanf("%d", &id);
            int index = findProduct(products, count, id);

            if (index == -1) {
                printf("상품명 입력: ");
                scanf("%s", name);
                printf("입고량 입력: ");
                scanf("%d", &quantity);
                printf("판매가격 입력: ");
                scanf("%d", &price);

                products[count].id = id;
                strcpy(products[count].name, name);
                products[count].price = price;
                products[count].stock = quantity;
                products[count].sales = 0;
                products[count].totalSales = 0;
                count++;
            } else {
                printf("기존 상품입니다. 입고량 추가 입력: ");
                scanf("%d", &quantity);
                products[index].stock += quantity;
                printf("입고 완료!\n");
            }
        }

        else if (menu == 2) { // 판매
            int id, qty;
            printf("상품 ID 입력: ");
            scanf("%d", &id);
            int index = findProduct(products, count, id);

            if (index == -1) {
                printf("존재하지 않는 상품입니다.\n");
                continue;
            }

            printf("판매 수량 입력: ");
            scanf("%d", &qty);

            if (qty > products[index].stock) {
                printf("재고 부족!\n");
            } else {
                products[index].stock -= qty;
                products[index].sales += qty;
                products[index].totalSales += qty * products[index].price;
                printf("판매 완료!\n");
            }
        }

        else if (menu == 3) { // 개별현황
            int id;
            printf("상품 ID 입력: ");
            scanf("%d", &id);
            int index = findProduct(products, count, id);

            if (index == -1) {
                printf("존재하지 않는 상품입니다.\n");
            } else {
                printf("\n[개별상품현황]\n");
                printf("ID: %d\n", products[index].id);
                printf("상품명: %s\n", products[index].name);
                printf("가격: %d\n", products[index].price);
                printf("재고: %d\n", products[index].stock);
                printf("판매량: %d\n", products[index].sales);
                printf("총판매금액: %d\n", products[index].totalSales);
            }
        }

        else if (menu == 4) { // 전체현황
            printf("\n[전체상품현황]\n");
            printf("ID\t상품명\t가격\t재고\t판매\t총판매금액\n");
            for (int i = 0; i < count; i++) {
                printf("%d\t%s\t%d\t%d\t%d\t%d\n",
                    products[i].id, products[i].name, products[i].price,
                    products[i].stock, products[i].sales, products[i].totalSales);
            }
        }

        else if (menu == 5) {
            printf("프로그램 종료.\n");
            break;
        }

        else {
            printf("잘못된 선택입니다.\n");
        }
    }

    return 0;
}
